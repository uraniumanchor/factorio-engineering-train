{"version":3,"sources":["store/Init.ts","store/slices/Fluids.ts","views/Fluids.tsx","store/slices/Other.ts","store/slices/Stacks.ts","views/Stacks.tsx","views/Other.tsx","views/BlueprintString.tsx","App.tsx","store/Store.ts","index.tsx"],"names":["init","createAction","Fluids","createSlice","name","initialState","Object","fromEntries","FluidData","map","fluid","reducers","toggle","state","payload","extraReducers","builder","addCase","forEach","keys","includes","fluids","useSelector","dispatch","useDispatch","style","display","gridTemplateColumns","gridAutoRows","gridColumn","gridRow","entries","k","v","Fragment","key","htmlFor","id","type","checked","onChange","Slice","actions","FuelType","Stacks","StackData","stack","setValue","value","bykey","ka","kb","localeCompare","stacks","sort","e","target","Other","dual","filler","fuel","toggleDual","setFiller","setFuel","other","chainEntities","entities","slice","entity","i","connections","red","push","entity_id","entity_number","connectEntities","entity1","entity2","side1","side2","color","addRailsAndSignals","numCars","railSections","Math","ceil","concat","Array","from","_","length","position","x","y","direction","fourInserterMap","fourChestMap","twoInserterMap","twoChestMap","BlueprintString","activeStacks","useMemo","filter","activeFluids","cars","carIndex","findIndex","car","used","reduce","s","existingStack","left","receiverStation","trainStop","control_behavior","circuit_condition","first_signal","constant","comparator","circuit_enable_disable","send_to_train","station","chests","flatMap","j","1","inserters","circuit_mode_of_operation","tanks","pumps","arithmeticCombinator","arithmetic_conditions","second_constant","operation","output_signal","2","constantCombinator","roboport","read_logistics","read_robot_stats","constructionInserter","logisticInserter","request_filters","index","count","lastPump","lastTank","lastInserter","lastChest","item","label","tiles","icons","schedules","version","providerStation","insertersAndChests","four","max","fourStacks","offset","l","two","twoStacks","trailingLocomotive","leadLocomotive","orientation","slots","inventory","filters","fuelId","find","locomotives","schedule","wait_conditions","compare_type","ticks","book","blueprints","blueprint","active_index","bookstring","btoa","pako","deflate","JSON","stringify","blueprint_book","to","border","wordBreak","textAlign","margin","App","className","reducer","combineReducers","store","configureStore","devTools","process","preloadedState","hash","window","location","trim","serializedState","inflate","atob","localStorage","getItem","parse","err","loadState","subscribe","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a38e9a8c.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const init = createAction('init');\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport FluidData from '../../data/fluid.json';\nimport { init } from '../Init';\n\nexport const Fluids = createSlice({\n  name: 'Fluids',\n  initialState: Object.fromEntries(FluidData.map((fluid) => [fluid, false])),\n  reducers: {\n    toggle(state, { payload }: PayloadAction<string>) {\n      state[payload] = !state[payload];\n    },\n  },\n  extraReducers: (builder) =>\n    builder.addCase(init, (state) => {\n      FluidData.forEach((fluid) => (state[fluid] = state[fluid] || false));\n      Object.keys(state).forEach((fluid) => {\n        if (!FluidData.includes(fluid)) {\n          delete state[fluid];\n        }\n      });\n    }),\n});\n","import { Fluids as Slice } from '../store/slices/Fluids';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\n\nexport function Fluids() {\n  const fluids = useSelector((state: StoreState) => state.fluids);\n  const dispatch = useDispatch();\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: '1fr 40px', gridAutoRows: 20 }}>\n      <h2 style={{ gridColumn: 'span 2', gridRow: 'span 3' }}>Fluids</h2>\n      {Object.entries(fluids).map(([k, v]) => (\n        <React.Fragment key={k}>\n          <label htmlFor={k}>{k}</label>\n          <input id={k} type='checkbox' checked={v} onChange={() => dispatch(Slice.actions.toggle(k))} />\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport StackData from '../../data/stacks.json';\nimport { init } from '../Init';\n\nexport enum FuelType {\n  wood = 'wood',\n  coal = 'coal',\n  solidFuel = 'solid-fuel',\n  rocketFuel = 'rocket-fuel',\n  nuclearFuel = 'nuclear-fuel',\n}\n\ninterface OtherState {\n  dual: boolean;\n  filler: keyof typeof StackData | '--';\n  fuel: FuelType | '--';\n}\n\nexport const Other = createSlice({\n  name: 'Other',\n  initialState: {\n    dual: true,\n    filler: 'artillery-shell',\n    fuel: '--',\n  } as OtherState,\n  reducers: {\n    toggleDual(state) {\n      state.dual = !state.dual;\n    },\n    setFiller(state, { payload }: PayloadAction<keyof typeof StackData | '--'>) {\n      state.filler = payload;\n    },\n    setFuel(state, { payload }: PayloadAction<FuelType | '--'>) {\n      state.fuel = payload;\n    },\n  },\n  extraReducers: (builder) =>\n    builder.addCase(init, (state) => {\n      state.dual = state.dual == null ? true : state.dual;\n      state.filler = state.filler || 'artillery-shell';\n      state.fuel = state.fuel || '--';\n    }),\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport StackData from '../../data/stacks.json';\nimport { init } from '../Init';\n\ninterface SetValuePayload {\n  name: keyof typeof StackData;\n  value: number;\n}\n\ntype StacksState = {\n  [P in keyof typeof StackData]: number;\n};\n\nexport const Stacks = createSlice({\n  name: 'Stacks',\n  initialState: Object.fromEntries(Object.keys(StackData).map((stack) => [stack, 0])) as StacksState,\n  reducers: {\n    setValue(state, { payload: { name, value } }: PayloadAction<SetValuePayload>) {\n      state[name] = value;\n    },\n  },\n  extraReducers: (builder) =>\n    builder.addCase(init, (state) => {\n      Object.keys(StackData).forEach(\n        (stack) => (state[stack as keyof typeof StackData] = state[stack as keyof typeof StackData] || 0)\n      );\n      Object.keys(state).forEach((stack) => {\n        if (!StackData[stack as keyof typeof StackData]) {\n          delete state[stack as keyof typeof StackData];\n        }\n      });\n    }),\n});\n","import { Stacks as Slice } from '../store/slices/Stacks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport StackData from '../data/stacks.json';\n\nfunction bykey([ka, _a]: [string, number], [kb, _b]: [string, number]) {\n  return ka.localeCompare(kb);\n}\n\nexport function Stacks() {\n  const stacks = useSelector((state: StoreState) => state.stacks);\n  const dispatch = useDispatch();\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: '1fr 40px 80px', gridAutoRows: 20 }}>\n      <h2 style={{ gridColumn: 'span 3', gridRow: 'span 3' }}>Item Stacks</h2>\n      {Object.entries(stacks)\n        .sort(bykey)\n        .map(([k, v]) => (\n          <React.Fragment key={k}>\n            <label htmlFor={k}>{k}</label>\n\n            <input\n              id={k}\n              type='number'\n              value={v}\n              onChange={(e) =>\n                dispatch(Slice.actions.setValue({ name: k as keyof typeof stacks, value: +e.target.value }))\n              }\n            />\n            <div>({(v * StackData[k as keyof typeof stacks]) as number})</div>\n          </React.Fragment>\n        ))}\n    </div>\n  );\n}\n","import { FuelType, Other as Slice } from '../store/slices/Other';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React from 'react';\nimport StackData from '../data/stacks.json';\n\nexport function Other() {\n  const other = useSelector((state: StoreState) => state.other);\n  const dispatch = useDispatch();\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gridAutoRows: 20 }}>\n      <h2 style={{ gridColumn: 'span 2', gridRow: 'span 3' }}>Other</h2>\n      <label htmlFor='dual'>Use Dual-Headed</label>\n      <input id='dual' type='checkbox' checked={other.dual} onChange={() => dispatch(Slice.actions.toggleDual())} />\n      <label htmlFor='filler'>Filler</label>\n      <select\n        id='filler'\n        value={other.filler}\n        onChange={(e) => dispatch(Slice.actions.setFiller(e.target.value as keyof typeof StackData | '--'))}\n      >\n        <option>--</option>\n        {Object.keys(StackData).map((k) => (\n          <option key={k}>{k}</option>\n        ))}\n      </select>\n      <label htmlFor='fuel'>Fuel</label>\n      <select\n        id='fuel'\n        value={other.fuel}\n        onChange={(e) => dispatch(Slice.actions.setFuel(e.target.value as FuelType | '--'))}\n      >\n        <option>--</option>\n        {Object.entries(FuelType).map(([k, v]) => (\n          <option key={k} value={k}>\n            {v}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { StoreState } from '../store/Store';\nimport React, { useMemo } from 'react';\nimport { Blueprint, BlueprintBook, Entity, Schedule } from '../types/Interfaces';\nimport pako from 'pako';\nimport StackData from '../data/stacks.json';\nimport { FuelType } from '../store/slices/Other';\n\nfunction chainEntities(entities: Entity[]) {\n  entities.slice(1).forEach((entity, i) => {\n    entity.connections?.['1']?.red?.push({\n      entity_id: entities[i].entity_number,\n    });\n  });\n  entities.slice(0, -1).forEach((entity, i) => {\n    entity.connections?.['1']?.red?.push({\n      entity_id: entities[i + 1].entity_number,\n    });\n  });\n}\n\nfunction connectEntities(\n  entity1: Entity,\n  entity2: Entity,\n  { side1 = '1', side2 = '1', color = 'red' }: { side1?: '1' | '2'; side2?: '1' | '2'; color?: 'green' | 'red' } = {}\n) {\n  entity1.connections?.[side1]?.[color]?.push({\n    entity_id: entity2.entity_number,\n  });\n  entity2.connections?.[side2]?.[color]?.push({\n    entity_id: entity1.entity_number,\n  });\n}\n\nfunction addRailsAndSignals(entities: Entity[], numCars: number, dual: boolean) {\n  const railSections = Math.ceil((numCars + (dual ? 2 : 1)) * 3.5) + (dual ? 1 : 2);\n  entities = entities.concat(\n    Array.from(Array(railSections).keys()).map((_, i) => ({\n      entity_number: entities.length + 1 + i,\n      name: 'straight-rail',\n      position: {\n        x: -2 * (railSections - i - (dual ? 1 : 2)),\n        y: -2,\n      },\n      direction: 2,\n    }))\n  );\n  if (dual) {\n    entities.push({\n      entity_number: entities.length + 1,\n      name: 'rail-signal',\n      position: {\n        x: 0.5 - 2 * railSections + 1,\n        y: -3.5,\n      },\n      direction: 2,\n    });\n  } else {\n    entities.push({\n      entity_number: entities.length + 1,\n      name: 'rail-signal',\n      position: {\n        x: 1.5,\n        y: -0.5,\n      },\n      direction: 6,\n    });\n  }\n  entities.push({\n    entity_number: entities.length + 1,\n    name: 'rail-signal',\n    position: {\n      x: 0.5 - 2 * railSections + (dual ? 1 : 3),\n      y: -0.5,\n    },\n    direction: 6,\n  });\n\n  return entities;\n}\n\nconst fourInserterMap = [-4.5, -3.5, -0.5, 0.5];\nconst fourChestMap = [-6.5, -5.5, 1.5, 2.5];\nconst twoInserterMap = [-3.5, -0.5];\nconst twoChestMap = [-4.5, 0.5];\n\nexport function BlueprintString() {\n  const { fluids, stacks, other } = useSelector((state: StoreState) => state);\n  const activeStacks = useMemo(() => Object.entries(stacks).filter(([_, v]) => v), [stacks]);\n  const activeFluids = useMemo(() => Object.entries(fluids).filter(([_, v]) => v), [fluids]);\n\n  const cars: [string, number][][] = useMemo(() => {\n    const cars: [string, number][][] = [];\n    activeStacks.forEach((stack) => {\n      let carIndex = cars.findIndex((car) => {\n        const used = car.reduce((s, existingStack) => s + existingStack[1], 0);\n        // only use the last chest slot if it's an exact match, otherwise we can't do filler\n        return (car.length < 23 && used + stack[1] <= 40) || (car.length === 23 && used + stack[1] === 40);\n      });\n      if (carIndex === -1) {\n        carIndex = cars.length;\n        cars.push([]);\n      }\n      cars[carIndex].push(stack);\n    });\n    return cars;\n  }, [activeStacks]);\n  cars.forEach((car) => {\n    const left = 40 - car.reduce((s, existingStack) => s + existingStack[1], 0);\n    if (left > 0 && car.length < 24) {\n      car.push([other.filler, left]);\n    }\n  });\n  const receiverStation: Blueprint = useMemo(() => {\n    let entities: Entity[] = [];\n    const trainStop: Entity = {\n      entity_number: entities.length + 1,\n      name: 'train-stop',\n      position: {\n        x: 0,\n        y: 0,\n      },\n      direction: 2,\n      control_behavior: {\n        circuit_condition: {\n          first_signal: {\n            type: 'virtual',\n            name: 'signal-anything',\n          },\n          constant: 0,\n          comparator: '>',\n        },\n        circuit_enable_disable: true,\n        send_to_train: false,\n      },\n      station: 'Engineering Dropoff',\n    };\n    entities.push(trainStop);\n    const chests: Entity[] = cars.flatMap((_, i) =>\n      Array.from(Array(6).keys()).map((j) => ({\n        entity_number: entities.length + 1 + j + i * 6,\n        name: 'logistic-chest-storage',\n        position: {\n          x: -5.5 + j - (cars.length - i + activeFluids.length) * 7,\n          y: 0.5,\n        },\n        connections: {\n          1: { red: [] },\n        },\n      }))\n    );\n    entities = entities.concat(chests);\n    const inserters: Entity[] = cars.flatMap((_, i) =>\n      Array.from(Array(6).keys()).map((j) => ({\n        entity_number: entities.length + 1 + j + i * 6,\n        name: 'stack-filter-inserter',\n        position: {\n          x: -5.5 + j - (cars.length - i + activeFluids.length) * 7,\n          y: -0.5,\n        },\n        control_behavior: {\n          circuit_mode_of_operation: 1,\n        },\n        connections: {\n          1: { red: [] },\n        },\n      }))\n    );\n    entities = entities.concat(inserters);\n    const tanks: Entity[] = activeFluids.flatMap((_, i) => [\n      {\n        entity_number: entities.length + 1 + i * 2,\n        name: 'storage-tank',\n        direction: 2,\n        position: {\n          x: -4.5 - 7 * (activeFluids.length - i),\n          y: -6.5,\n        },\n        connections: {\n          1: {\n            red: [],\n          },\n        },\n      },\n      {\n        entity_number: entities.length + 2 + i * 2,\n        name: 'storage-tank',\n        position: {\n          x: -1.5 - 7 * (activeFluids.length - i),\n          y: -6.5,\n        },\n        connections: {\n          1: {\n            red: [],\n          },\n        },\n      },\n    ]);\n    entities = entities.concat(tanks);\n    const pumps: Entity[] = activeFluids.map(([fluid], i) => ({\n      entity_number: entities.length + 1 + i,\n      name: 'pump',\n      position: {\n        x: -0.5 - 7 * (activeFluids.length - i),\n        y: -4,\n      },\n      control_behavior: {\n        circuit_condition: {\n          first_signal: {\n            type: 'fluid',\n            name: fluid,\n          },\n          constant: -15000,\n          comparator: '>',\n        },\n      },\n      connections: {\n        1: {\n          red: [],\n        },\n      },\n    }));\n    entities = entities.concat(pumps);\n    const arithmeticCombinator: Entity = {\n      entity_number: entities.length + 1,\n      name: 'arithmetic-combinator',\n      position: {\n        x: -6,\n        y: 1.5,\n      },\n      direction: 2,\n      control_behavior: {\n        arithmetic_conditions: {\n          first_signal: {\n            type: 'virtual',\n            name: 'signal-each',\n          },\n          second_constant: -1,\n          operation: '*',\n          output_signal: {\n            type: 'virtual',\n            name: 'signal-each',\n          },\n        },\n      },\n      connections: {\n        1: {\n          red: [],\n        },\n        2: {\n          red: [],\n        },\n      },\n    };\n    entities.push(arithmeticCombinator);\n    const constantCombinator: Entity = {\n      entity_number: entities.length + 1,\n      name: 'constant-combinator',\n      direction: 6,\n      position: {\n        x: -5.5,\n        y: -0.5,\n      },\n    };\n    entities.push(constantCombinator);\n    const roboport: Entity = {\n      entity_number: entities.length + 1,\n      name: 'roboport',\n      position: {\n        x: -21,\n        y: 3,\n      },\n      control_behavior: {\n        read_logistics: false,\n        read_robot_stats: true,\n      },\n      connections: {\n        '1': {\n          red: [],\n        },\n      },\n    };\n    entities.push(roboport);\n    const constructionInserter: Entity = {\n      entity_number: entities.length + 1,\n      name: 'fast-inserter',\n      position: {\n        x: -22.5,\n        y: 5.5,\n      },\n      direction: 4,\n      control_behavior: {\n        circuit_condition: {\n          first_signal: {\n            type: 'virtual',\n            name: 'signal-X',\n          },\n          constant: 50,\n          comparator: '<',\n        },\n      },\n      connections: {\n        '1': {\n          red: [],\n        },\n      },\n    };\n    entities.push(constructionInserter);\n    const logisticInserter: Entity = {\n      entity_number: entities.length + 1,\n      name: 'fast-inserter',\n      position: {\n        x: -21.5,\n        y: 5.5,\n      },\n      direction: 4,\n      control_behavior: {\n        circuit_condition: {\n          first_signal: {\n            type: 'virtual',\n            name: 'signal-Z',\n          },\n          constant: 50,\n          comparator: '<',\n        },\n      },\n      connections: {\n        '1': {\n          red: [],\n        },\n      },\n    };\n    entities.push(logisticInserter);\n    entities.push({\n      entity_number: entities.length + 1,\n      name: 'logistic-chest-requester',\n      position: {\n        x: -22.5,\n        y: 6.5,\n      },\n      request_filters: [\n        {\n          index: 1,\n          name: 'logistic-robot',\n          count: 50,\n        },\n      ],\n    });\n    entities.push({\n      entity_number: entities.length + 1,\n      name: 'logistic-chest-requester',\n      position: {\n        x: -21.5,\n        y: 6.5,\n      },\n      request_filters: [\n        {\n          index: 1,\n          name: 'construction-robot',\n          count: 50,\n        },\n      ],\n    });\n    entities = addRailsAndSignals(entities, cars.length + activeFluids.length, other.dual);\n\n    connectEntities(roboport, logisticInserter);\n    connectEntities(logisticInserter, constructionInserter);\n    connectEntities(arithmeticCombinator, constantCombinator, { side1: '2' });\n    connectEntities(arithmeticCombinator, trainStop, { side1: '2' });\n    chainEntities(inserters);\n    chainEntities(chests);\n    chainEntities(pumps);\n    chainEntities(tanks);\n    const lastPump = pumps.slice(-1)[0];\n    const lastTank = tanks.slice(-1)[0];\n    const lastInserter = inserters.slice(-1)[0];\n    const lastChest = chests.slice(-1)[0];\n    if (lastPump) {\n      connectEntities(lastTank, arithmeticCombinator, { side2: '1' });\n      connectEntities(lastPump, arithmeticCombinator, { side2: '2' });\n      if (lastInserter) {\n        connectEntities(pumps[0], lastInserter);\n        connectEntities(tanks[0], lastChest);\n      }\n    } else if (lastInserter) {\n      connectEntities(lastChest, arithmeticCombinator, { side2: '1' });\n      connectEntities(lastInserter, arithmeticCombinator, { side2: '2' });\n    }\n    return {\n      item: 'blueprint',\n      label: 'Engineering Receiver',\n      entities: entities,\n      tiles: [],\n      icons: [],\n      schedules: [],\n      version: 77311705089,\n    };\n  }, [activeFluids, cars, other.dual]);\n  const providerStation: Blueprint = useMemo(() => {\n    let entities: Entity[] = [];\n    const trainStop: Entity = {\n      entity_number: entities.length + 1,\n      name: 'train-stop',\n      position: {\n        x: 0,\n        y: 0,\n      },\n      direction: 2,\n      station: 'Engineering Pickup',\n    };\n    entities.push(trainStop);\n    const insertersAndChests: Entity[] = cars.flatMap((car, i) => {\n      const four = Math.max(0, Math.ceil((car.length - 12) / 2));\n      const fourStacks: Entity[] =\n        four !== 0\n          ? Array.from(Array(four).keys()).flatMap((j) =>\n              Array.from(\n                Array(j === four - 1 && car.length % 4 !== 0 && four * 4 > car.length ? car.length % 4 : 4).keys()\n              ).flatMap((k) => {\n                const stack = car[j * 4 + k];\n                const offset = (cars.slice(0, i).reduce((l, car) => l + car.length, 0) + j * 4 + k) * 2;\n\n                return [\n                  {\n                    entity_number: entities.length + offset + 1,\n                    name: 'long-handed-inserter',\n                    position: {\n                      x: -5.5 + j - (cars.length - i + (other.dual ? 0 : activeFluids.length)) * 7,\n                      y: fourInserterMap[k],\n                    },\n                    direction: k >= 2 ? 4 : 0,\n                  },\n                  {\n                    entity_number: entities.length + offset + 2,\n                    name: 'logistic-chest-requester',\n                    position: {\n                      x: -5.5 + j - (cars.length - i + (other.dual ? 0 : activeFluids.length)) * 7,\n                      y: fourChestMap[k],\n                    },\n                    request_filters: [\n                      {\n                        index: 1,\n                        name: stack[0],\n                        count: stack[1] * StackData[stack[0] as keyof typeof StackData],\n                      },\n                    ],\n                  },\n                ];\n              })\n            )\n          : [];\n      const two = Math.ceil((car.length - four * 4) / 2);\n\n      const twoStacks: Entity[] =\n        two !== 0\n          ? Array.from(Array(two).keys()).flatMap((j) =>\n              Array.from(Array(j === two - 1 && car.length % 2 !== 0 ? car.length % 2 : 2).keys()).flatMap((k) => {\n                const stack = car[j * 2 + four * 4 + k];\n                const offset = (cars.slice(0, i).reduce((l, car) => l + car.length, 0) + four * 4 + j * 2 + k) * 2;\n                return [\n                  {\n                    entity_number: entities.length + offset + 1,\n                    name: 'fast-inserter',\n                    position: {\n                      x: -5.5 + j + four - (cars.length - i + (other.dual ? 0 : activeFluids.length)) * 7,\n                      y: twoInserterMap[k],\n                    },\n                    direction: k >= 1 ? 4 : 0,\n                  },\n                  {\n                    entity_number: entities.length + offset + 2,\n                    name: 'logistic-chest-requester',\n                    position: {\n                      x: -5.5 + j + four - (cars.length - i + (other.dual ? 0 : activeFluids.length)) * 7,\n                      y: twoChestMap[k],\n                    },\n                    request_filters: [\n                      {\n                        index: 1,\n                        name: stack[0],\n                        count: stack[1] * StackData[stack[0] as keyof typeof StackData],\n                      },\n                    ],\n                  },\n                ];\n              })\n            )\n          : [];\n      return [...fourStacks, ...twoStacks];\n    });\n    entities = entities.concat(insertersAndChests);\n    const tanks: Entity[] = activeFluids.flatMap((_, i) => [\n      {\n        entity_number: entities.length + 1 + i * 2,\n        name: 'storage-tank',\n        direction: 2,\n        position: {\n          x: -4.5 - 7 * (activeFluids.length - i + (other.dual ? cars.length : 0)),\n          y: -6.5,\n        },\n      },\n      {\n        entity_number: entities.length + 2 + i * 2,\n        name: 'storage-tank',\n        position: {\n          x: -1.5 - 7 * (activeFluids.length - i + (other.dual ? cars.length : 0)),\n          y: -6.5,\n        },\n      },\n    ]);\n    entities = entities.concat(tanks);\n    const pumps: Entity[] = activeFluids.map((_, i) => ({\n      entity_number: entities.length + 1 + i,\n      name: 'pump',\n      position: {\n        x: -0.5 - 7 * (activeFluids.length - i + (other.dual ? cars.length : 0)),\n        y: -4,\n      },\n      direction: 4,\n    }));\n    entities = entities.concat(pumps);\n    entities = addRailsAndSignals(entities, cars.length + activeFluids.length, other.dual);\n    const leadLocomotive: Entity = {\n      entity_number: entities.length + 1,\n      name: 'locomotive',\n      position: {\n        x: -3,\n        y: -2,\n      },\n      orientation: 0.25,\n    };\n    entities.push(leadLocomotive);\n    let trailingLocomotive: Entity | undefined;\n    if (other.dual) {\n      trailingLocomotive = {\n        entity_number: entities.length + 1,\n        name: 'locomotive',\n        position: {\n          x: -10 - (cars.length + activeFluids.length) * 7,\n          y: -2,\n        },\n        orientation: 0.75,\n      };\n      entities.push(trailingLocomotive);\n    }\n    entities = entities.concat(\n      activeFluids.map((_, i) => ({\n        entity_number: entities.length + 1 + i,\n        name: 'fluid-wagon',\n        position: {\n          x: -3 - (activeFluids.length - i + (other.dual ? cars.length : 0)) * 7,\n          y: -2,\n        },\n        orientation: 0.75,\n      }))\n    );\n    entities = entities.concat(\n      cars.map((slots, i) => ({\n        entity_number: entities.length + 1 + i,\n        name: 'cargo-wagon',\n        position: {\n          x: -3 - (cars.length - i + (other.dual ? 0 : activeFluids.length)) * 7,\n          y: -2,\n        },\n        inventory: {\n          filters: slots.flatMap(([name, stacks], i) =>\n            Array.from(Array(stacks).keys()).map((j) => ({\n              name: name,\n              index: 1 + j + slots.slice(0, i).reduce((s, [_, number]) => s + number, 0),\n            }))\n          ),\n        },\n        orientation: 0.75,\n      }))\n    );\n    if (other.fuel !== '--') {\n      const fuelId = Object.entries(FuelType).find(([k, v]) => k === other.fuel)?.[1]!;\n      entities.push({\n        entity_number: entities.length + 1,\n        name: 'logistic-chest-requester',\n        position: {\n          x: -3.5,\n          y: -4.5,\n        },\n        request_filters: [\n          {\n            index: 1,\n            name: fuelId,\n            count: StackData[fuelId as keyof typeof StackData] * 3,\n          },\n        ],\n      });\n      entities.push({\n        entity_number: entities.length + 1,\n        name: 'fast-inserter',\n        position: {\n          x: -3.5,\n          y: -3.5,\n        },\n      });\n      if (other.dual) {\n        entities.push({\n          entity_number: entities.length + 1,\n          name: 'logistic-chest-requester',\n          position: {\n            x: -9.5 - (cars.length + activeFluids.length) * 7,\n            y: -4.5,\n          },\n          request_filters: [\n            {\n              index: 1,\n              name: fuelId,\n              count: StackData[fuelId as keyof typeof StackData] * 3,\n            },\n          ],\n        });\n        entities.push({\n          entity_number: entities.length + 1,\n          name: 'fast-inserter',\n          position: {\n            x: -9.5 - (cars.length + activeFluids.length) * 7,\n            y: -3.5,\n          },\n        });\n      }\n    }\n    const schedules: Schedule[] = [\n      {\n        locomotives: [],\n        schedule: [\n          {\n            station: 'Engineering Pickup',\n            wait_conditions: [\n              {\n                compare_type: 'or',\n                type: 'full',\n              },\n            ],\n          },\n          {\n            station: 'Engineering Dropoff',\n            wait_conditions: [\n              {\n                compare_type: 'or',\n                type: 'inactivity',\n                ticks: 1800,\n              },\n            ],\n          },\n        ],\n      },\n    ];\n    schedules[0].locomotives.push(leadLocomotive.entity_number);\n    if (trailingLocomotive) {\n      schedules[0].locomotives.push(trailingLocomotive.entity_number);\n    }\n\n    return {\n      item: 'blueprint',\n      label: 'Engineering Provider',\n      entities: entities,\n      tiles: [],\n      icons: [],\n      schedules: schedules,\n      version: 77311705089,\n    };\n  }, [activeFluids, cars, other.dual, other.fuel]);\n  const book: BlueprintBook = useMemo(\n    () => ({\n      item: 'blueprint-book',\n      label: 'Engineering Stations',\n      blueprints: [\n        {\n          blueprint: receiverStation,\n          index: 0,\n        },\n        {\n          blueprint: providerStation,\n          index: 1,\n        },\n      ],\n      active_index: 0,\n      version: 77311705089,\n    }),\n    [providerStation, receiverStation]\n  );\n\n  const bookstring = useMemo(\n    () => `0${btoa(pako.deflate(JSON.stringify({ blueprint_book: book }), { to: 'string' }))}`,\n    [book]\n  );\n  return (\n    <div>\n      <h2>Blueprint String</h2>\n      <div style={{ border: '1px solid black', wordBreak: 'break-all', textAlign: 'left', margin: '0 100px 20px' }}>\n        {bookstring}\n      </div>\n      <div style={{ border: '1px solid black', wordBreak: 'break-all', textAlign: 'left', margin: '0 100px 20px' }}>\n        <pre>{JSON.stringify({ blueprint_book: book }, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { Fluids } from './views/Fluids';\nimport { Stacks } from './views/Stacks';\nimport { Other } from './views/Other';\nimport { BlueprintString } from './views/BlueprintString';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)' }}>\n        <Stacks />\n        <Fluids />\n        <Other />\n      </div>\n      <BlueprintString />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport pako from 'pako';\nimport { Fluids } from './slices/Fluids';\nimport { Stacks } from './slices/Stacks';\nimport { Other } from './slices/Other';\nimport { init } from './Init';\n\nconst reducer = combineReducers({\n  fluids: Fluids.reducer,\n  stacks: Stacks.reducer,\n  other: Other.reducer,\n});\n\n// null is a valid thing to deserialize to, so it needs to be undefined explicitly\nconst loadState = () => {\n  const hash = window.location.hash.trim().slice(1);\n  try {\n    const serializedState =\n      hash !== '' ? pako.inflate(atob(hash), { to: 'string' }) : localStorage.getItem('state') || '';\n    if (serializedState === '') {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst saveState = (state: StoreState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    window.location.hash = btoa(pako.deflate(serializedState, { to: 'string' }));\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport const store = configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState: loadState(),\n});\n\nstore.dispatch(init());\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport type StoreState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}